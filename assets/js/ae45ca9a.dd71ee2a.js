"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7157],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>k});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(r),m=o,k=c["".concat(p,".").concat(m)]||c[m]||d[m]||a;return r?n.createElement(k,i(i({ref:t},s),{},{components:r})):n.createElement(k,i({ref:t},s))}));function k(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},36969:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(87462),o=(r(67294),r(3905));const a={},i="Board - TBS Colibri RACE",l={unversionedId:"wiki/boards/COLIBRIRACE",id:"wiki/boards/COLIBRIRACE",title:"Board - TBS Colibri RACE",description:"The Colibri RACE is a STM32F3 based flight control designed specifically to work with the TBS POWERCUBE multi rotor stack.",source:"@site/docs/wiki/boards/COLIBRIRACE.md",sourceDirName:"wiki/boards",slug:"/wiki/boards/COLIBRIRACE",permalink:"/betaflight.com/docs/wiki/boards/COLIBRIRACE",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"wiki",previous:{title:"CLRACINGF7",permalink:"/betaflight.com/docs/wiki/boards/CLRACINGF7"},next:{title:"CrazyBee F3 FR",permalink:"/betaflight.com/docs/wiki/boards/CRAZYBEEF3FR"}},p={},u=[{value:"Hardware Features:",id:"hardware-features",level:2},{value:"Serial Ports",id:"serial-ports",level:2},{value:"Pinouts",id:"pinouts",level:2},{value:"SWD - ICSP",id:"swd---icsp",level:3},{value:"Internal Bus",id:"internal-bus",level:3},{value:"Servo",id:"servo",level:3},{value:"IO_1 - LED Strip",id:"io_1---led-strip",level:3},{value:"IO_2 - Sensor Interface",id:"io_2---sensor-interface",level:3},{value:"IO_3 - RC input",id:"io_3---rc-input",level:3},{value:"IO_4 - Buzzer",id:"io_4---buzzer",level:3},{value:"IO_5 - Free UART",id:"io_5---free-uart",level:3},{value:"IO_6 - IR TX (extension)",id:"io_6---ir-tx-extension",level:3}],s={toc:u};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"board---tbs-colibri-race"},"Board - TBS Colibri RACE"),(0,o.kt)("p",null,"The Colibri RACE is a STM32F3 based flight control designed specifically to work with the TBS POWERCUBE multi rotor stack."),(0,o.kt)("h2",{id:"hardware-features"},"Hardware Features:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"STM32F303 based chipset for ultimate performance")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"PPM, SBUS, DSM, DSMX input (5V and 3.3V provided over internal BUS). No inverters or hacks needed.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"6 PWM ESC output channels (autoconnect, internal BUS)"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"RGB LED strip support incl. power management"),(0,o.kt)("li",{parentName:"ul"},"Extension port for GPS / external compass / pressure sensor"),(0,o.kt)("li",{parentName:"ul"},"UART port for peripherals (Blackbox, FrSky telemetry etc.)"),(0,o.kt)("li",{parentName:"ul"},"Choose between plug & play sockets or solder pads for R/C and buzzer"),(0,o.kt)("li",{parentName:"ul"},"5V buzzer output"),(0,o.kt)("li",{parentName:"ul"},"MPU6500 new generation accelerometer/gyro"),(0,o.kt)("li",{parentName:"ul"},"3x status LED (DCDC pwr/ 3.3V pwr/ status)"),(0,o.kt)("li",{parentName:"ul"},"Battery monitoring for 12V, 5V and VBat supply"),(0,o.kt)("li",{parentName:"ul"},"Size: 36mmx36mm (30.5mm standard raster)"),(0,o.kt)("li",{parentName:"ul"},"Weight: 4.4g")),(0,o.kt)("p",{parentName:"li"},"For more details please visit:\n",(0,o.kt)("a",{parentName:"p",href:"http://www.team-blacksheep.com/powercube"},"http://www.team-blacksheep.com/powercube")))),(0,o.kt)("h2",{id:"serial-ports"},"Serial Ports"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"| Value | Identifier   | Board Markings | Notes                                     |\n| ----- | ------------ | -------------- | ------------------------------------------|\n| 1     | VCP          | USB PORT       | Main Port For MSP                         |\n| 2     | USART1       | FREE PORT      | PC4 and PC5(Tx and Rx respectively)       |\n| 3     | USART2       | PPM Serial     | PA15                                      |\n| 4     | USART3       | GPS PORT       | PB10 and PB11(Tx and Rx respectively)     |\n")),(0,o.kt)("h2",{id:"pinouts"},"Pinouts"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Full pinout details are available in the manual, here:\n\nhttp://www.team-blacksheep.com/colibri_race\n")),(0,o.kt)("h3",{id:"swd---icsp"},"SWD - ICSP"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"| Pin | Function       | Notes                                        |\n| --- | -------------- | -------------------------------------------- |\n| 1   | VCC_IN         | 3.3 Volt                                     |\n| 2   | SWDIO          |                                              |\n| 3   | nRESET         |                                              |\n| 4   | SWCLK          |                                              |\n| 5   | Ground         |                                              |\n| 6   | SWO/TDO        |                                              |\n")),(0,o.kt)("h3",{id:"internal-bus"},"Internal Bus"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"| Pin | Function       | Notes                                        |\n| --- | -------------- | -------------------------------------------- |\n| 1   | PWM1           | MOTOR 1                                      |\n| 2   | PWM2           | MOTOR 2                                      |\n| 3   | PWM3           | MOTOR 3                                      |\n| 4   | PWM4           | MOTOR 4                                      |\n| 5   | PWM5           | MOTOR 5 (For Y6 or Hex X)                    |\n| 6   | PWM6           | MOTOR 6 (For Y6 or Hex X)                    |\n| 7   | BST SDA        | Use For TBS CorePro Control Device           |\n| 8   | BST SCL        | Use For TBS CorePro Control Device           |\n| 9   | PWM7           | Can be a normal GPIO (PA1) or PWM            |\n| 10  | PWM8           | Can be a normal GPIO (PA2) or PWM            |\n| 11  | 12.2V DCDC     | If 12v is detected, the Blue LED will turn on|\n| 12  | 5.1V DCDC      | Voltage for MCU                              |\n")),(0,o.kt)("h3",{id:"servo"},"Servo"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"| Pin | Function       | Notes                                        |\n| --- | -------------- | -------------------------------------------- |\n| 1   | Ground         |                                              |\n| 2   | VCC_OUT        | 5.1 Volt output to LCD Strip                 |\n| 3   | PWM Servo      | PB14 - PWM10                                 |\n")),(0,o.kt)("h3",{id:"io_1---led-strip"},"IO_1 - LED Strip"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"| Pin | Function          | Notes                                        |\n| --- | ----------------- | -------------------------------------------- |\n| 1   | LED_STRIP         | Enable `feature LED_STRIP`                   |\n| 2   | VCC_OUT           | 5.1 Volt output to LCD Strip                 |\n| 3   | Ground            |                                              |\n")),(0,o.kt)("h3",{id:"io_2---sensor-interface"},"IO_2 - Sensor Interface"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"| Pin | Function          | Notes                                        |\n| --- | ----------------- | -------------------------------------------- |\n| 1   | VCC_OUT           | 4.7 Volt output to the device                |\n| 2   | Ground            |                                              |\n| 3   | UART3 TX          | GPS                                          |\n| 4   | UART3 RX          | GPS                                          |\n| 5   | SDA               | mag, pressure, or other i2c device           |\n| 6   | SCL               | mag, pressure, or other i2c device           |\n")),(0,o.kt)("h3",{id:"io_3---rc-input"},"IO_3 - RC input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"IO_3 is used for RX_PPM/RX_SERIAL. Under the `PORT` tab, set RX_SERIAL to UART2 when using RX_SERIAL.\n\n| Pin | Function          | Notes                                        |\n| --- | ----------------- | -------------------------------------------- |\n| 1   | PPM/Serial        | Can PPM or Serial input                      |\n| 2   | VCC_OUT           | 3.3 Volt output to the device                |\n| 3   | Ground            |                                              |\n| 4   | VCC_OUT           | 5.1 Volt output to the device                |\n")),(0,o.kt)("h3",{id:"io_4---buzzer"},"IO_4 - Buzzer"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"| Pin | Function          | Notes                                        |\n| --- | ----------------- | -------------------------------------------- |\n| 1   | BUZZER            | Normal high (5.1v)                           |\n| 2   | VCC_OUT           | 5.1 Volt output to the device                |\n")),(0,o.kt)("h3",{id:"io_5---free-uart"},"IO_5 - Free UART"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"| Pin | Function          | Notes                                        |\n| --- | ----------------- | -------------------------------------------- |\n| 1   | UART1 TX          | Free UART                                    |\n| 2   | UART1 RX          | Free UART                                    |\n| 3   | Ground            |                                              |\n| 4   | VCC_OUT           | 4.7 Volt output to the device                |\n")),(0,o.kt)("h3",{id:"io_6---ir-tx-extension"},"IO_6 - IR TX (extension)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"| Pin | Function          | Notes                                        |\n| --- | ----------------- | -------------------------------------------- |\n| 1   | IR TX             |                                              |\n| 2   | Ground            |                                              |\n")))}c.isMDXComponent=!0}}]);