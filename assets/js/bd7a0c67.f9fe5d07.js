"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1153],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),d=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(a),u=n,m=c["".concat(s,".").concat(u)]||c[u]||f[u]||i;return a?r.createElement(m,o(o({ref:t},p),{},{components:a})):r.createElement(m,o({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},23996:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const i={},o="Betaflight Flight Controller Manufacturer Design Guidelines",l={unversionedId:"manufacturer/Manufacturer Design Guidelines",id:"manufacturer/Manufacturer Design Guidelines",title:"Betaflight Flight Controller Manufacturer Design Guidelines",description:"Betaflight",source:"@site/docs/manufacturer/Manufacturer Design Guidelines.md",sourceDirName:"manufacturer",slug:"/manufacturer/Manufacturer Design Guidelines",permalink:"/betaflight.com/docs/manufacturer/Manufacturer Design Guidelines",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"manufacturer",previous:{title:"How to Create a Target Configuration",permalink:"/betaflight.com/docs/manufacturer/Creating An Unified Target"},next:{title:"Requirements for the submission of new and updated targets",permalink:"/betaflight.com/docs/manufacturer/Requirements for submission of targets"}},s={},d=[{value:"1.1 Intent",id:"11-intent",level:2},{value:"1.2 Important Terms and Glossary",id:"12-important-terms-and-glossary",level:2},{value:"2.1 Hardware Approval Process - Example",id:"21-hardware-approval-process---example",level:2},{value:"2.2 Adjacent Benefits and Opportunities",id:"22-adjacent-benefits-and-opportunities",level:2},{value:"3.1 Best Practices for Flight Controller Design and Performance",id:"31-best-practices-for-flight-controller-design-and-performance",level:2},{value:"3.1.1 Physical Configuration",id:"311-physical-configuration",level:3},{value:"3.1.2 Inertial Measurement Unit (IMU) Selection",id:"312-inertial-measurement-unit-imu-selection",level:3},{value:"3.1.3 Future IMU Options and how to select preferred options",id:"313-future-imu-options-and-how-to-select-preferred-options",level:3},{value:"3.1.4 Electrical Isolation for Sensor Components",id:"314-electrical-isolation-for-sensor-components",level:3},{value:"3.1.4.1 Regulated Power and LDO Power Configurations",id:"3141-regulated-power-and-ldo-power-configurations",level:4},{value:"3.1.4.2 ADC Circuitry (e.g. for Current Sensors)",id:"3142-adc-circuitry-eg-for-current-sensors",level:4},{value:"3.1.4.3 Supporting Additional Features",id:"3143-supporting-additional-features",level:4},{value:"3.1.4.4 SWD Debug Support",id:"3144-swd-debug-support",level:4},{value:"3.1.4.5 Blackbox Support",id:"3145-blackbox-support",level:4},{value:"3.1.4.6 LEDs",id:"3146-leds",level:4},{value:"3.2 Resource Selection Considerations",id:"32-resource-selection-considerations",level:2},{value:"3.2.1 Assigning Resource by Priority",id:"321-assigning-resource-by-priority",level:3},{value:"3.2.1.1 G4 and H7 Resource Selection",id:"3211-g4-and-h7-resource-selection",level:4},{value:"3.2.1.2 F7 Resource Selection",id:"3212-f7-resource-selection",level:4},{value:"3.2.1.3 F4 Resource Selection",id:"3213-f4-resource-selection",level:4},{value:"3.3 Markings, version numbers, and documentation",id:"33-markings-version-numbers-and-documentation",level:2},{value:"3.3.1 Creating Design Revisions and Communicating Changes",id:"331-creating-design-revisions-and-communicating-changes",level:3},{value:"3.3.2 Implementing Flight Controller Designs for Ready-To-Fly Craft",id:"332-implementing-flight-controller-designs-for-ready-to-fly-craft",level:3},{value:"3.3.2.1 General Recommendations and Documentation",id:"3321-general-recommendations-and-documentation",level:4},{value:"3.3.2.2 Leveraging the Betaflight Preset System",id:"3322-leveraging-the-betaflight-preset-system",level:4},{value:"3.4 Electronic Speed Controller Compatibility",id:"34-electronic-speed-controller-compatibility",level:2},{value:"3.4.1 For 32 Bit ESCs (BLHeli_32 and AM32)",id:"341-for-32-bit-escs-blheli_32-and-am32",level:3},{value:"3.4.2 For 8 Bit ESCs (BLHeli_S)",id:"342-for-8-bit-escs-blheli_s",level:3},{value:"3.4.3 For Legacy ESCs",id:"343-for-legacy-escs",level:3},{value:"4.1 Rated Looptime and Performance",id:"41-rated-looptime-and-performance",level:2},{value:"4.2 Definitions for targets",id:"42-definitions-for-targets",level:2},{value:"4.2.1 Defines for GYRO and ACC",id:"421-defines-for-gyro-and-acc",level:3},{value:"4.2.2 Defines for FLASH",id:"422-defines-for-flash",level:3},{value:"4.2.3 Defines for BARO",id:"423-defines-for-baro",level:3},{value:"4.2.4 Defines for MAG",id:"424-defines-for-mag",level:3},{value:"4.2.5 Defines for SX1280",id:"425-defines-for-sx1280",level:3},{value:"4.2.6 Defines for OSD",id:"426-defines-for-osd",level:3},{value:"4.2.7 Defines for SDCARD",id:"427-defines-for-sdcard",level:3},{value:"4.2.8 Defines for CC2500",id:"428-defines-for-cc2500",level:3},{value:"4.3 Usage of the cloud build API",id:"43-usage-of-the-cloud-build-api",level:2}],p={toc:d};function c(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"betaflight-flight-controller-manufacturer-design-guidelines"},"Betaflight Flight Controller Manufacturer Design Guidelines"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Betaflight",src:a(2294).Z,width:"874",height:"200"})),(0,n.kt)("p",null,"Version Change Register"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Version #"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Revision Date"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Changes, Reasons, and Notes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Draft 0.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"14 May 2022"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Initial Draft Format")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Draft 0.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"04 June 2022"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Revise format to Final Format")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Draft 0.3"),(0,n.kt)("td",{parentName:"tr",align:"left"},"12 June 2022"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Update Visual Media and Tables")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Draft 0.4"),(0,n.kt)("td",{parentName:"tr",align:"left"},"21 October 2022"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Update format, add information")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Draft 0.5"),(0,n.kt)("td",{parentName:"tr",align:"left"},"24 October 2022"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add additional information")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Draft 0.6"),(0,n.kt)("td",{parentName:"tr",align:"left"},"06 November 2022"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add cloud build information")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Draft 0.7"),(0,n.kt)("td",{parentName:"tr",align:"left"},"17 November 2022"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Remove off-board hardware defines")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Draft 0.8"),(0,n.kt)("td",{parentName:"tr",align:"left"},"01 January 2023"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Update BARO and CC2500")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Draft 0.9"),(0,n.kt)("td",{parentName:"tr",align:"left"},"14 January 2023"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add FC LEDs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Draft 1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"26 January 2023"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add Signal Rules")))),(0,n.kt)("p",null,"Thank you for considering or continuing your development of Betaflight capable flight control hardware."),(0,n.kt)("p",null,"Betaflight is an open source project that is free to use and does not incur a license cost, however for the most successful release of a new flight controller or complete ready-to-fly product that is using Betaflight, it remains immensely beneficial to provide representative production samples or pre-production testing units to the Betaflight development team for testing and development feedback."),(0,n.kt)("p",null,"In order to have hardware added to the Betaflight approved hardware list, hardware samples representative of the final configuration must be provided to designated members of the betaflight development team. It is strongly recommended that samples of development hardware or production-representative examples are evaluated positively before accepting pre-orders or releasing products. Many of the same benefits can be provided for inclusive hardware packages, including flight control stacks, or ready-to-fly craft."),(0,n.kt)("p",null,"Sharing schematics/layouts with the reviewers will also be beneficial and improve the quality of the review."),(0,n.kt)("p",null,"This provides the Betaflight team with an opportunity to ensure that the hardware and firmware behave 100% as expected in the representative configuration, as well as support verification of custom defaults required for firmware operation. After-sales support to customers from members of the Betaflight team are also made possible for reproducing end user issues."),(0,n.kt)("p",null,"Additional benefits are also present in the form of allowing experienced active pilots with backgrounds in engineering of these systems to assist with aspects of the development process particularly in respect to real world use the products will be subjected to."),(0,n.kt)("p",null,"Finally, we will offer a \u2019Betaflight approved\u2019 product list on the Betaflight github to advise the userbase on electronics which both follow our \u2018best practice\u2019 guidance, and which have been tested by our development team. This will be available for flight controller hardware, as well as electronic speed controller stacks, AIOs, and ready-to-fly craft. This strategy is designed to help both developers optimise their hardware and our user base get directed to optimal hardware, and reduce support requests for the Betaflight team who serve a user base of over a hundred thousand users."),(0,n.kt)("h1",{id:"1-important-terms-and-conditions"},"1 Important Terms and Conditions"),(0,n.kt)("h2",{id:"11-intent"},"1.1 Intent"),(0,n.kt)("p",null,"The goal of achieving a certified hardware ecosystem for Betaflight Flight Controller hardware and firmware targets is to ensure that hardware design supports correct operation of Betaflight features and supports an improved user experience for \u2018connecting\u2019, flashing, programming, and flying."),(0,n.kt)("p",null,"The cutting edge flight performance achieved by Betaflight relies on proper hardware design, microcontroller resource allocation, and the ability of end users to correctly configure the software with Betaflight."),(0,n.kt)("p",null,"Achieving state of the art performance requires minimizing latency in craft response to perturbations and command inputs, efficient filtering to remove oscillations from flight control calculations, and leveraging the capabilities of peripheral components to enhance the flight experience. For example, features such as advanced RPM filtering, RPM Dynamic Idle and Multi-Dynamic Notch rely on achieving microsecond scale timing jitter for best performance while simultaneously communicating with electronic speed controllers using bidirectional DShot, determining craft attitude and calculating optimal mixer outputs, as well as operating the myriad of desired user peripherals. This symphony of delicately scheduled operations can be achieved reliably with proper flight controller design."),(0,n.kt)("h2",{id:"12-important-terms-and-glossary"},"1.2 Important Terms and Glossary"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Term"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Definition"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Reference"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"ADC"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Analog to Digital Converter"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BEC"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Battery Elimination Circuit"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Electronic voltage regulator circuit that provides a specified voltage to a single output power rail")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Bidirectional DSHOT"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Two-Way DSHOT communication protocol to enable Electronic Speed Controller telemetry to be sent back to the flight controller"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://betaflight.com/archive/Bidirectional-DSHOT-and-RPM-Filter"},"https://betaflight.com/archive/Bidirectional-DSHOT-and-RPM-Filter"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Bit Bang"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Bit-banging refers to any instance of utilizing GPIO functionality to digitally create signals in place of dedicated hardware. This can alleviate some specific data buffer timing requirements"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"DSHOT"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Digital Shot Communication Protocol used for Flight Controller to Electronic Speed Controller"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://betaflight.com/docs/wiki/archive/DSHOT-ESC-Protocol"},"https://betaflight.com/docs/wiki/archive/DSHOT-ESC-Protocol"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"ESC"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Electronic Speed Controller"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://us.aspina-group.com/en/learning-zone/columns/what-is/021/"},"https://us.aspina-group.com/en/learning-zone/columns/what-is/021/"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"FPV"),(0,n.kt)("td",{parentName:"tr",align:"left"},"First Person View"),(0,n.kt)("td",{parentName:"tr",align:"left"},"This can also refer to the complete avionics-telemetry supplied via a camera & video transmission system")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"GPIO"),(0,n.kt)("td",{parentName:"tr",align:"left"},"General Purpose Input/Output"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Reconfigurable digital signal pin that can be selected from an MCU pin")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"IMU"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Inertial Motion Unit"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Inertial Navigation hardware systems using combined gyroscope and accelerometer unit intended to provide accurate estimates of angular rates, acceleration, and orientation. These can also incorporate magnetometers, barometers, and GPS signals")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"I2C"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Inter-Integrated Circuit synchronous serial communication protocol used for connecting microcontroller CPU to peripheral devices"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"MCU"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Micro Controller Unit"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Single integrated circuit microprocessor with integrated processor, memory, and programmable input/output modules")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"SPI Bus"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Serial Peripheral Interface that enables MCU to interface with ADC, DAC, registers, RAM storage, and GPIO"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://www.analog.com/en/analog-dialogue/articles/introduction-to-spi-interface.html"},"https://www.analog.com/en/analog-dialogue/articles/introduction-to-spi-interface.html"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"PCB"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Printed Circuit Board"),(0,n.kt)("td",{parentName:"tr",align:"left"},"May also refer to a populated PCB with components")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"PDB"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Power Distribution Board"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A PCB intended to provide power distribution to electronic speed controller, flight controller, and other peripheral elements")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"VDD"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Voltage - Operating Voltage for a particular chip"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"VDD_IO"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Voltage range permissible as I/O Supply voltage (Typically 3.3V or less)"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("h1",{id:"2-engaging-with-the-betaflight-development-team"},"2 Engaging with the Betaflight Development Team"),(0,n.kt)("h2",{id:"21-hardware-approval-process---example"},"2.1 Hardware Approval Process - Example"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Manufacturer initiates contact with Betaflight developer(s) at ",(0,n.kt)("a",{parentName:"p",href:"mailto:hardware@betaflight.com"},"hardware@betaflight.com"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Betaflight team will establish a closed Discord channel for ongoing private discussion between key members of the development team and manufacturer designees\nWork in progress schematics, PCB renders, and similar documentation prior to initial production provides opportunities for early feedback")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Initial Submission"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"This will require key information to be available, such as specific MCU arrangement (e.g. SPI Bus allocations) may be required in order to support complete feature sets.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Desired Target name, MCU type, and which target architecture to be used required."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Optionally, if any Official Betaflight Presets are to be requested with this hardware, what specific configurations will be used, and a rough plan of what complete system hardware will be provided to support these efforts."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Initial PR for target implementation will need to also include a maintainer, with the intention of providing permission to make future edits on the target.")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Request for specific targets"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"If the flight controller design is intended to have a dedicated Betaflight target, then a new target submission can accompany the process",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"For additional information, see here: ",(0,n.kt)("a",{parentName:"li",href:"https://betaflight.com/news/new-target-requirements/"},"https://betaflight.com/news/new-target-requirements/")))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Production Representative Samples"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"To complete hardware certification, representative hardware samples of initial production run, or pre-production batches which are representative of the final release design must be furnished to designated Betaflight development team member(s) to conduct final validation and certification operations.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"This will indirectly provide access to the adjacent benefits of leveraging Betaflight developer expertise by using this hardware in complete systems, including flight testing as desired and comprehensive blackbox log analysis. For configurations requiring specific hardware to be tested (e.g. a Bind & Fly or Plug & Play UAS), providing complete representative hardware systems is best.")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Reporting of performance"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"With sufficient test time using the final product, developers can agree to recommend products which meet our guidelines and performance expectations. Products will be noted on Betaflight Github."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Submission"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Once hardware has been approved, it will be added to the list of Betaflight approved hardware",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"If new target(s) and/or presets have been added, pull requests will be evaluated, completed, and merged for inclusion in subsequent Betaflight releases"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Target Maintenance"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"After approval and release, the designated contact is expected to provide any continuing support that may be required in order to keep the approved hardware working well for end users")))),(0,n.kt)("h2",{id:"22-adjacent-benefits-and-opportunities"},"2.2 Adjacent Benefits and Opportunities"),(0,n.kt)("p",null,"Betaflight developers are likely to provide significant indirect benefits for manufacturers adhering to this program. These benefits could include reviews of board designs, pad location recommendations, evaluation of EMI behaviors in builds, analysis of Blackbox logging outputs, and even insights into forward compatibility with other subsystems used in complete builds."),(0,n.kt)("p",null,"Improved customer experience with software interactions, development of presets for BNF multicopter configurations, and validation with specific FPV and RC segments of craft to ensure customer experience will be positive. The key integration aspects of supporting various remote control and video combinations can only be fully validated with testing hardware samples."),(0,n.kt)("p",null,"This thorough testing by expert team members, will help verify and then allow recommendation from the Betaflight development team. Betaflight official recommendation will be highly valuable promotion for the manufacturer so we urge manufacturers to take up this opportunity and work with us."),(0,n.kt)("h1",{id:"30-flight-controller-design-guidelines"},"3.0 Flight Controller Design Guidelines"),(0,n.kt)("p",null,"These guidelines provide best practices for physical, electrical, and documentation support of flight controllers. These recommendations are provided as guidelines, however deviating from these provided suggestions should only be undertaken through a collaborative effort with Betaflight developers during the design and prototyping process."),(0,n.kt)("h2",{id:"31-best-practices-for-flight-controller-design-and-performance"},"3.1 Best Practices for Flight Controller Design and Performance"),(0,n.kt)("p",null,"When asked to review hardware our first action will be to review schematics/layouts against the application notes for the applicable data sheets. The specifics of how the hardware is interconnected is of course going to be driven by a number of constraints, such as recommended pinouts, as outlined below, but is it essential that good design practises are followed with respect to providing good quality power regulation, appropriate use of ground/power planes, decoupling component positioning etc."),(0,n.kt)("h3",{id:"311-physical-configuration"},"3.1.1 Physical Configuration"),(0,n.kt)("p",null,"Primary configurations that place the inertial motion unit and other EMI-sensitive components on the side of the PCB that should be mounted away from the electronic speed controller performs best in vertically stacked configurations. Similarly, physically larger components such as inverters in more protected locations from impacts or adjacent PCB boards in stacked build configurations is recommended."),(0,n.kt)("p",null,"The commonly accepted and used board layouts include 16x16mm for M2 hardware (perpendicularly aligned), 25.4x25.4mm for M2 hardware (typically diagonally aligned), 20x20mm for M2 or M3 hardware (perpendicularly aligned), and 30.5x30.5mm for M3 hardware (perpendicularly aligned). In the case of 20x20 boards, selecting a hardware mounting size should be informed by the ability to use threaded inserts and shock-absorbing grommets in oversized holes, while dedicated M2 mounting limits mounting options if hardware is capable of being used in larger craft that tend to utilize M3 mounting."),(0,n.kt)("p",null,"Boards with oversized holes (e.g. M4 holes and silicone inserts for M3 stack mounting) experience longer service life and experience fewer failures due to PCB deformation during impacts. For standalone flight controllers, integrated \u2018AIO\u2019 flight controllers, and even adjacent configurations provided as \u2018stacks\u2019 with additional PCBs, this architecture has been proven to be the most robust over time."),(0,n.kt)("p",null,"Board layouts should provide redundancy for all critical functions. For example, solder locations with identical pin arrangements to JST connector located adjacent to the JST header mounting is strongly recommended, providing end users significant added value and opportunities to produce more robust craft.\nCastellations and use of mounting pads with through holes or edge continuity are also strongly recommended, especially with more compact flight controller designs."),(0,n.kt)("p",null,"For board layouts implementing transistor PINIO functionality for \u2018pit switch\u2019 or similar behaviors, solder bridge options are strongly recommended to enable users to select output voltage, or physically bypass the switching functionality by connecting to voltage sources. Particularly for video systems, it is strongly recommended to avoid performing this switching on the ground, due to interference concerns demonstrated with inconsistent ground planes."),(0,n.kt)("p",null,"If providing direct mounting support for receivers, the following specification should be followed: the pin sequence must be GND, 5V, UART RX, UART TX with a 2.54mm pin pitch, and permit receivers sized up to 12x20mm. This mirrors the standard mounting (Gnd/5V/Tx/Rx) of CRSF Nano and ELRS Nano receivers, with mirrored UART communication allowing for Tx and Rx to be paired to the same UART."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Rules:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"GND should be as close to a signal as possible."),(0,n.kt)("li",{parentName:"ul"},"High speed signals should be away from power."),(0,n.kt)("li",{parentName:"ul"},"Keep similar signals next to each other."),(0,n.kt)("li",{parentName:"ul"},"Always minimize current flow path.")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"BAT/GND/CUR/TLM/M1/M2/M3/M4 is far better as it keeps noisy power far away from high-speed digital signals.\nM1-M4 being very high-speed, TLM being low speed, CUR being analog and current flow loop/return path between GND and BAT minimized.")),(0,n.kt)("h3",{id:"312-inertial-measurement-unit-imu-selection"},"3.1.2 Inertial Measurement Unit (IMU) Selection"),(0,n.kt)("p",null,"Selecting an appropriate IMU for flight controller operation is critical to the resulting flight performance of systems. Proven examples of hardware using single Invensense MPU-6000, single or dual ICM-20602, and also Bosch BMI-270 and BMI-180 units have been successfully demonstrated to operate with Betaflight, although the latter two examples have required significand development effort to bring performance of the IMU gyroscope and accelerometer sensing behaviors up to the standards required to maximize flight performance."),(0,n.kt)("h3",{id:"313-future-imu-options-and-how-to-select-preferred-options"},"3.1.3 Future IMU Options and how to select preferred options"),(0,n.kt)("p",null,"Future IMU selection should be carried out with close involvement of the Betaflight development group. In cases such as the ICM-42688-P, ICM-42688-V, or ICM-42605, early hardware validation samples should be explored in collaboration with Betaflight developers to determine the suitability of these IMU units in relevant environments.\nThe ability to customize IMU lowpass filtering and operate within the same GRMS/Shock environment allows for maximum portability of existing filtering and tune schemes, but this development must occur with complete hardware samples and flown in representative flight regimes in order to replicate the EMI environment end users will experience."),(0,n.kt)("p",null,"The IMU sensors, designed for applications outside of sUAS, are typically subjected to very harsh electromagnetic environments. Ensuring electromagnetic compatibility when using these immediately adjacent to ultrasonically switched power MOSFET devices, constantly operational radio frequency devices (such as remote control and FPV video systems), under thermal stresses of moving over 1kW through the complete flight stack, are a nontrivial operation. In order to minimize risks of flyaway and brownout behaviors which can be observed if IMU data filtering and power delivery are inadequate, proper circuit design and validation testing must be performed."),(0,n.kt)("p",null,"// Mention examples such as the ICM-42688-P and similar options that offer the same high precision and GRMS/Shock tolerances required."),(0,n.kt)("p",null,"// Also reiterate the importance of these sensors being able to operate in the sometimes harsh EMI environment of being mounted immediately adjacent to, or on the same PCB as a system that is pushing 1kW or more power via ultrasonic power MOSFET switching through lightweight flight control stacks."),(0,n.kt)("h3",{id:"314-electrical-isolation-for-sensor-components"},"3.1.4 Electrical Isolation for Sensor Components"),(0,n.kt)("p",null,"Separate VDD from VDD_IO\nImplement additional filtering on VDD if using a single 3v reg for MCU and Sensor"),(0,n.kt)("h4",{id:"3141-regulated-power-and-ldo-power-configurations"},"3.1.4.1 Regulated Power and LDO Power Configurations"),(0,n.kt)("p",null,"A key aspect of flight controller performance and longevity is design of the low powered rails that supply power to inertial motion units and the STM microcontroller. Providing robust low-ripple power to these devices provides the maximum performance potential and hardware longevity for operation in the challenging EMI environments present on these craft."),(0,n.kt)("p",null,"Similarly, 3.3V, 5V, and 9-12V BEC power needs to provide consistent power at the intended current draw. For example, 3.3V 500mA is a recommended minimum current. \u20184.5V\u2019 (5V USB supplied power) should be capable of powering a receiver and GPS unit, which may require over 700mA."),(0,n.kt)("p",null,"Standard battery powered 5V rails should provide at least 1A, preferably 1.5A to 2A in order to provide higher current if anticipated to be used with a large number of peripherals (such as LED strips, 5V powered FPV Video Systems, or as source power to HD cameras)."),(0,n.kt)("p",null,"Providing a 10V 2A BEC is also strongly recommended with flight controller designs, as this supports high definition video systems, and even enables better analog video system power options.\nEach of these can be optionally connected to PINIO driven pit switches, and/or jumper pad setups that enable end users to select constant-on or transistor switched behavior, particularly if located to support video transmission systems."),(0,n.kt)("p",null,"Such 10V regulators should function at full rated current down to 10V input voltage to support the BEC output from some ESCs."),(0,n.kt)("p",null,"Again, providing robust low-ripple power to these devices provides the maximum performance potential and hardware longevity for operation in the challenging EMI environments present on these craft."),(0,n.kt)("h4",{id:"3142-adc-circuitry-eg-for-current-sensors"},"3.1.4.2 ADC Circuitry (e.g. for Current Sensors)"),(0,n.kt)("p",null,"Using ADC measurements on the flight controller to actively monitor current information from ESCs, or if using integral FC-PDB, minimizing noise on the circuit improves the accuracy and jitter of these signals. To reduce noise from current reading, instead of transfering voltage to FC, send current to FC then move RL Load resistor associated with INA31 onto FC with capacitor in parallel.\n",(0,n.kt)("a",{parentName:"p",href:"https://www.ti.com/lit/ds/symlink/ina139.pdf"},"https://www.ti.com/lit/ds/symlink/ina139.pdf")),(0,n.kt)("p",null,"Ideally there should be a pair of bridgeable pads on the ESC in series with the load resistor so that with legacy FCs one can bridge it to include the resistor. Correspondingly on FCs we should have a 82K resistor (and parallel 100nF cap), again with series bridging pads which would be left unbridged when paired with legacy ESCs."),(0,n.kt)("p",null,"When using an ESC/FC stack supporting the above bridging pads, one would leave the ESC pads open and short those on the FC for noise free current reading. In all other cases the ESC pads would be bridged or the FC\u2019s left open to support the current configuration at the expense of higher noise."),(0,n.kt)("p",null,"Note that the above recommendation is based on the fact that if current if fed into one end of a wire, that same current will always flow out of the other end, whereas with a voltage there will be a voltage drop due to resistance in both that wire and the ground return, and the currents flowing through them. Converting the current to a voltage at the input of the ADC will result in significant noise reduction."),(0,n.kt)("h4",{id:"3143-supporting-additional-features"},"3.1.4.3 Supporting Additional Features"),(0,n.kt)("p",null,"Numerous standard features have become common with flight controller design, for example chips such as MAX7456 to enable monochrome On-Screen Display (OSD) functionality, including Barometers to supplement IMU functionality to provide more accurate altitude estimates, PINIO transistor switched output pads, LED pads, or additional PWM/Motor outputs."),(0,n.kt)("p",null,"In order to fully support these additional features, it remains strongly recommended that hardware manufacturers incorporate early developer feedback to ensure complete functionality."),(0,n.kt)("h4",{id:"3144-swd-debug-support"},"3.1.4.4 SWD Debug Support"),(0,n.kt)("p",null,"In order to aid development of Betaflight firmware, and to debug FC specific issues, it is highly beneficial to have test points for the SWDIO/SWCLK lines together with 3V3 and ground connections to enable connection of a debugger such as a Segger JLink or ST-Link. This speeds up resolution of issues hugely, so if at all possible do not use those pins (PA13/PA14) for other purposes."),(0,n.kt)("h4",{id:"3145-blackbox-support"},"3.1.4.5 Blackbox Support"),(0,n.kt)("p",null,"Black box of at least 8mb should also be standard on all fcs as it\u2019s literally impossible to problem solve a tune or flight issues with out black box."),(0,n.kt)("h4",{id:"3146-leds"},"3.1.4.6 LEDs"),(0,n.kt)("p",null,"FCs should implement at least one LED to indicate activity. The second is preferable, and the third optional. Having at least one LED is essential for users to help diagnose basic faults. More LEDs are beneficial to developers as we can build custom images to help diagnose user reported issues."),(0,n.kt)("p",null,"Each LED should be connected to a GPIO line. Polarity of the output doesn not matter."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"LED Number"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Colour"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Blue"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Green"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Preferably")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Amber"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No")))),(0,n.kt)("p",null,"For details of the use of these LEDs, please see the ","[FC LEDs]","(FC LEDs.md) documentation"),(0,n.kt)("h2",{id:"32-resource-selection-considerations"},"3.2 Resource Selection Considerations"),(0,n.kt)("h3",{id:"321-assigning-resource-by-priority"},"3.2.1 Assigning Resource by Priority"),(0,n.kt)("p",null,"Good resource allocation ensures maximum flexibility in the selection of the modes available to users (for example with DSHOT) and also minimizes conflict in timer and DMA stream allocation."),(0,n.kt)("p",null,"Assign motor channels with highest priority \u2026"),(0,n.kt)("h4",{id:"3211-g4-and-h7-resource-selection"},"3.2.1.1 G4 and H7 Resource Selection"),(0,n.kt)("p",null,"G4 and H7 have very flexible DMA controls, therefore we have no specific requirement for these processors."),(0,n.kt)("h4",{id:"3212-f7-resource-selection"},"3.2.1.2 F7 Resource Selection"),(0,n.kt)("p",null,"F7X2 MCUs provide greater flexibility and do not require inverters in order to support protocols such as SBUS, SmartPort, or F.Port. They also do not exhibit the SPI 1 DMA limitations of F4 processors."),(0,n.kt)("p",null,"Bitbang Dshot communcation protocol will always use Timer 1 and Timer 8 - Do NOT use these timers for any other functions"),(0,n.kt)("h4",{id:"3213-f4-resource-selection"},"3.2.1.3 F4 Resource Selection"),(0,n.kt)("p",null,"Due to F4 MCU management of serial inversion, any pins that implement inversion should be clearly marked, and ideally not result in reduced capability of that UART when used with un-inverted peripheral connections."),(0,n.kt)("p",null,"For Betaflight 4.4 and later versions, the expected default configuration will take advantage of Bidirectional DShot, therefore default Looprates and DShot of 8k/4k/DShot-300 are anticipated to be the stock configuration. This does specifically require Motor Resource allocation to enable proper bidirectional DShot communication."),(0,n.kt)("p",null,"If using Bitbang DShot, when SPI Bus #1 is to be used for the gyro, care must be taken to ensure that motor pins are assigned to appropriate timers. This is because Bitbang DSHOT uses DMA2 to write to GPIO ports. If this is enabled, it is not possible to enable DMA on an SPI bus using DMA2.\nPractically speaking this means that we can\u2019t support DMA on SPI bus 1 (which uses DMA2) on F405 and F411 processors. It is better to put multiple devices on other SPI busses that use SPI bus 1, which is typically used for the gyro.\nBitbang Dshot communcation protocol will always use Timer 1 and Timer 8 - do NOT use these pins for any other functions."),(0,n.kt)("p",null,"Further reading: Section 2.1.10 of the errata at\n",(0,n.kt)("a",{parentName:"p",href:"https://www.st.com/resource/en/errata_sheet/dm00037591-stm32f405407xx-and-stm32f415417xx-device-limitations-stmicroelectronics.pdf"},"https://www.st.com/resource/en/errata_sheet/dm00037591-stm32f405407xx-and-stm32f415417xx-device-limitations-stmicroelectronics.pdf")),(0,n.kt)("p",null,"Corruption may occurs on DMA2 if AHB peripherals (e.g. GPIO ports) are accessed concurrently with APB peripherals (eg SPI busses).\nPractically, this means that all pins should be on the same port, or at most two ports, so that only one (or two) DMA streams are required for bitbanged operation."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Additional Recommendations:"),(0,n.kt)("p",{parentName:"li"},"Use A00 for LED Strip (diatone fury resources insert as example)"),(0,n.kt)("p",{parentName:"li"},"Use pins PA13 and 14 for debug options. Including test point pads (these can by tiny) as well as the necessary 3.3v/Ground pads is strongly recommended."),(0,n.kt)("p",{parentName:"li"},"The DIAT-FURYF4OSD is a good example configuration for F405 boards, because it uses pins with timers that do not experience any conflicts. Motors are on port pins with associated timers and use neither TIM 1 nor N Channels."),(0,n.kt)("p",{parentName:"li"},"As an additional reference design, see the Fenix F405: ",(0,n.kt)("a",{parentName:"p",href:"https://oshwlab.com/jyesmith/fenix-f405"},"https://oshwlab.com/jyesmith/fenix-f405")))),(0,n.kt)("h2",{id:"33-markings-version-numbers-and-documentation"},"3.3 Markings, version numbers, and documentation"),(0,n.kt)("p",null,"It is highly recommended that the flight controller Manufacturer Name, Board Name, and Board Design Revision be marked clearly on the flight controller itself. Where possible, indicating the firmware target name, or selecting a firmware target name to minimize confusion reduces the likelihood of an end user attempting to configure the flight controller with an incorrect target."),(0,n.kt)("h3",{id:"331-creating-design-revisions-and-communicating-changes"},"3.3.1 Creating Design Revisions and Communicating Changes"),(0,n.kt)("p",null,"Providing sufficient marking and documentation will be required for hardware approval. Screen printing on the flight controller critical information - pin identifiers, board name, revision, and manufacturer will be necessary, with sufficient detail to enable end users to properly connect devices to the flight controller."),(0,n.kt)("p",null,"When creating flight controller revisions and improvements, it is strongly recommended that indications and documentations are made available, particularly when pinout changes, output rating changes, or hardware bill of material changes. Any board configuration change requiring a user to change configuration behavior must have an accompanying change in marking to indicate (e.g. changing an IMU, or altering the pinout of solder pads)."),(0,n.kt)("p",null,"Following standard marking practices (e.g. V, VCC, or VBAT for battery voltage, G or GND for ground, T for ESC Telemetry, C for Current Sensing ADC, etc.) is also strongly recommended. Similarly, providing consistent color selections for pin header JST wiring looms, and consistent marking on the PCB is always preferable for robust building and troubleshooting."),(0,n.kt)("p",null,"Providing a CLI dump file that enables users to reset their flight controller to stock configuration is needed if a dedicated target is not provided. This is particularly relevant if multiple versions of a board which share targets but have significant hardware changes are present, a CLI dump file for each flight controller revision must be made available to users."),(0,n.kt)("h3",{id:"332-implementing-flight-controller-designs-for-ready-to-fly-craft"},"3.3.2 Implementing Flight Controller Designs for Ready-To-Fly Craft"),(0,n.kt)("h4",{id:"3321-general-recommendations-and-documentation"},"3.3.2.1 General Recommendations and Documentation"),(0,n.kt)("p",null,"// A good example of properly documenting and supporting ready-to-fly craft would be the way EMAX makes entire CLI dumps of every craft which enables users to revert systems to the as-shipped software configuration"),(0,n.kt)("h4",{id:"3322-leveraging-the-betaflight-preset-system"},"3.3.2.2 Leveraging the Betaflight Preset System"),(0,n.kt)("p",null,"One of the most powerful tools for end users that can save significant time and reduce the likelihood of misconfiguration is the Preset system. Developing an Official Betaflight preset and generating a pull request with the assistance of the Betaflight development team allows for end users to quickly and easily configure their craft. The versatility of selectable options, RC Link presets, and even Tune & Filter presets allow for diverse configurations of RTF craft products to be supported.\nApplying and using presets not only saves users significant time, but reduces the likelihood of data entry errors or incorrect configurations to be applied, which can be of particular importance for products aimed at less experienced users."),(0,n.kt)("p",null,"For manufacturers providing configuration presets for flight controllers (strongly recommended), providing documentation of suggested locations to connect peripheral devices, match the provided preset menu selections can greatly assist end users with proper configuration of their craft. These should include selecting appropriate PID loop rates, DShot data rates, IMU-specific Gyro Lowpass Filtering, Receiver installation (including options with the correct Port, protocol, SerialRX_Inversion, and SerialRX_HalfDuplex), HD FPV MSP port installation, VTX control (including protocol(s), port, and optional pit mode states), GPS (port and protocols), LEDs, and any PINIO type peripheral connections where applicable."),(0,n.kt)("p",null,"Working with the Betaflight development team provides opportunities to develop presets that can bring RTF craft back to stock configuration, enable users to rapidly configure \u2018Plug & Play\u2019 systems based on selected RC link hardware installed per documentation, and even permit Betaflight developers with extensive experience developing precise tunes for craft to generate a range of tunes for that specific product."),(0,n.kt)("h2",{id:"34-electronic-speed-controller-compatibility"},"3.4 Electronic Speed Controller Compatibility"),(0,n.kt)("p",null,"A significant amount of the added performance available in Betaflight 4.X and beyond is based on leveraging ESC RPM telemetry data in order to use RPM Notch Filters and Dynamic Idle features."),(0,n.kt)("h3",{id:"341-for-32-bit-escs-blheli_32-and-am32"},"3.4.1 For 32 Bit ESCs (BLHeli_32 and AM32)"),(0,n.kt)("p",null,"Betaflight supports all 32-bit ESCs currently available, with BLHeli_32 and AM32 configurations, as well as APD configurations being capable of supporting bidirectional DShot, and user-configured operation with bidirectional DShot disabled.\nAdditional DShot extended telemetry will be implemented over time as demonstrated stable, however current extended telemetry options will only be enabled by user selection."),(0,n.kt)("p",null,"Providing 32b ESCs with firmware prior to 32.66 will require end users to reflash ESCs. Craft will not arm due to the RPMFILTER error that will be present due to a lack of RPM Telemetry. The required solution will be disabling Bidirectional DShot (not recommended) or reflashing ESC (strongly recommended)."),(0,n.kt)("h3",{id:"342-for-8-bit-escs-blheli_s"},"3.4.2 For 8 Bit ESCs (BLHeli_S)"),(0,n.kt)("p",null,"Betaflight will continue to support all current 8-bit ESC configurations, however these will rely on bidirectional DShot enabled by default."),(0,n.kt)("p",null,"For Betaflight 4.4 and subsequent releases, the Betaflight team will NO LONGER support BLHeli_S as a default configuration. The enhanced flight performance made possible by operating with Bidirectional DShot features enabled will become the default behavior for all Betaflight craft.."),(0,n.kt)("p",null,"8-bit ESCs can run ",(0,n.kt)("strong",{parentName:"p"},"BlueJay"),", ",(0,n.kt)("strong",{parentName:"p"},"JESC"),"."),(0,n.kt)("p",null,"For hardware, such as AIO boards which incorporate ESC and FC, the expectation will be that hardware comes with installed firmware meeting these requirements. The preferred option in this case is ",(0,n.kt)("strong",{parentName:"p"},"BlueJay"),", due to the ability to adjust PWM frequencies and ease of end user support for other functionality across MCU layouts."),(0,n.kt)("p",null,"Failure to comply with this requirement will require end users to perform firmware reflash of ESCs, and without reflashing craft will not arm due to the RPMFILTER error that will be present due to a lack of RPM Telemetry.\nThe required solution will be disabling Bidirectional DShot (not recommended) or reflashing ESC (strongly recommended)."),(0,n.kt)("h3",{id:"343-for-legacy-escs"},"3.4.3 For Legacy ESCs"),(0,n.kt)("p",null,"For legacy ESCs that are only capable of OneShot and Multishot utilization, end users will be required to disable DShot in order to continue with operations. This situation only applies to pre-BLHeli_S ESC architectures, and is not anticipated to be an issue for the vast majority of users. The lack of DShot capability has been part of Betaflight operation since 3.2 (in 2017), therefore legacy support for this obsolescent hardware will require additional end user configuration, however these are still indirectly supported and may exhibit improved performance with the most recent Betaflight versions despite being unable to take advantage of bidirectional DShot features."),(0,n.kt)("h1",{id:"4-reference-tables"},"4 Reference Tables"),(0,n.kt)("h2",{id:"41-rated-looptime-and-performance"},"4.1 Rated Looptime and Performance"),(0,n.kt)("p",null,"Rated Performance of specific MCU, IMU, and ESC DShot Protocol Combinations"),(0,n.kt)("p",null,"These are the ",(0,n.kt)("strong",{parentName:"p"},"strongly recommended")," default configurations"),(0,n.kt)("p",null,"For stock configurations, and implementations of ready-to-fly craft, the following configurations are the officially recommended configurations."),(0,n.kt)("p",null,"Importantly, although the Bidirectional DShot ENABLED may require lower PID Loop Rates for F411 and F405 flight controllers, the difference in loop time is 125us or 250us. These are microseconds. The improvements in filtering using RPM Notches alongside Sliding-DFT Multi-Dynamic notches can provide improvements on the scale of milliseconds for phase latency when processing IMU signals to post-filter information that can be used for PID/Mixer calculations. The flight performance of using bidirectional DShot is absolutely worth the PID Looptime Tradeoff, due to that order of magnitude improvement in cumulative signal pathway delay enabled with more targeted notch filtering schema."),(0,n.kt)("p",null,"Looptime and Performance Recommendation Table:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"MCU"),(0,n.kt)("th",{parentName:"tr",align:"left"},"IMU"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Sampling Rate"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Bidirectional DShot Status"),(0,n.kt)("th",{parentName:"tr",align:"left"},"PID Loop Rate"),(0,n.kt)("th",{parentName:"tr",align:"left"},"DShot Protocol"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"F7X2, H7XX, G4XX, and similar"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MPU60X0, ICM2060X, ICM42688P"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enabled or Disabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 600")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"BMI-270"),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.2 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enabled or Disabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.2 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 300")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"F405"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MPU6000, MPU6050, ICM20601, ICM42688P"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"4 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 300")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"MPU6000, MPU6050, ICM20601, ICM42688P"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Disabled (not recommended)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 600")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"BMI-270"),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.2 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enabled or Disabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.2 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 300")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"F411 UART Rx ","*","*"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MPU6000, MPU6050, ICM20601"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"4 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 300")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"MPU6000, MPU6050, ICM20601"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Disabled (not recommended)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 600")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"BMI-270"),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.2 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.2 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 300")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"F411 SPI Rx ","*","*","*"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MPU6000, MPU6050, ICM20601"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 300")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"MPU6000, MPU6050, ICM20601"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Disabled (not recommended)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"4 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 300")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"BMI-270"),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.2 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1.6 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 300")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"BMI-270"),(0,n.kt)("td",{parentName:"tr",align:"left"},"8 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Disabled (not recommended)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.2 kHz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"DShot 300")))),(0,n.kt)("p",null,"*","*"," For F411 UART Rx applications, using both available UARTs AND enabling SoftSerial, Accelerometer, large numbers of OSD elements, and using a larger number of filters, stability may require lowering looprate to 2kHz"),(0,n.kt)("p",null,"*","*","*"," There are no SPI Rx solutions that are strongly recommended for future development due to challenges in resource allocation and scheduler inconsistency that consistently emerge with SPI Rx designs.\nAdditionally, there are no RC ecosystems that are actively developing a supported SPI Rx solution (ExpressLRS 3.0 and later do not support SPI; FrSky does not support SPI Rx over any protocol, and other SPI Rx solutions have been fully deprecated)."),(0,n.kt)("p",null,"Note that the use of gyros such as the BMI270 lowers the gyro loop rate from 8kHz to 3.2kHz and is therefore advantageous for F411 designs."),(0,n.kt)("h2",{id:"42-definitions-for-targets"},"4.2 Definitions for targets"),(0,n.kt)("p",null,"As reference please choose the defines for your target from this list as applicable for the target to select appropiate hardware for the cloud build."),(0,n.kt)("h3",{id:"421-defines-for-gyro-and-acc"},"4.2.1 Defines for GYRO and ACC"),(0,n.kt)("p",null,"Define at least one gyro and one accelerometer."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"#define USE_GYRO_SPI_MPU6000\n#define USE_ACC_SPI_MPU6000\n#define USE_GYRO_SPI_MPU6500\n#define USE_ACC_SPI_MPU6500\n#define USE_GYRO_SPI_ICM20689\n#define USE_ACC_SPI_ICM20689\n#define USE_ACCGYRO_BMI270\n#define USE_GYRO_SPI_ICM42605\n#define USE_ACC_SPI_ICM42605\n#define USE_GYRO_SPI_ICM42688P\n#define USE_ACC_SPI_ICM42688P\n")),(0,n.kt)("h3",{id:"422-defines-for-flash"},"4.2.2 Defines for FLASH"),(0,n.kt)("p",null,"Define correct flash driver(s) only if physical present on the board."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"#define USE_FLASH_M25P16           // 16MB Micron M25P16 and others (https://github.com/betaflight/betaflight/blob/master/src/main/drivers/flash_m25p16.c#L68)\n#define USE_FLASH_W25N01G          // 1Gb NAND flash support\n#define USE_FLASH_W25M             // 16, 32, 64 or 128MB Winbond stacked die support\n#define USE_FLASH_W25M512          // 512Kb (256Kb x 2 stacked) NOR flash support\n#define USE_FLASH_W25M02G          // 2Gb (1Gb x 2 stacked) NAND flash support\n#define USE_FLASH_W25Q128FV        // 16MB Winbond 25Q128 and the 8MB Winbond W25Q8 types\n")),(0,n.kt)("h3",{id:"423-defines-for-baro"},"4.2.3 Defines for BARO"),(0,n.kt)("p",null,"Define a barometer only if physical present on the board."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"#define USE_BARO_MS5611\n#define USE_BARO_SPI_MS5611\n#define USE_BARO_BMP280\n#define USE_BARO_SPI_BMP280\n#define USE_BARO_BMP388\n#define USE_BARO_SPI_BMP388\n#define USE_BARO_LPS\n#define USE_BARO_SPI_LPS\n#define USE_BARO_QMP6988\n#define USE_BARO_SPI_QMP6988\n#define USE_BARO_DPS310\n#define USE_BARO_SPI_DPS310\n#define USE_BARO_2SMBP_02B\n#define USE_BARO_SPI_2SMBP_02B\n")),(0,n.kt)("h3",{id:"424-defines-for-mag"},"4.2.4 Defines for MAG"),(0,n.kt)("p",null,"Define a magnetometer only if physical present of the board."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"#define USE_MAG_DATA_READY_SIGNAL\n#define USE_MAG_HMC5883\n#define USE_MAG_SPI_HMC5883\n#define USE_MAG_QMC5883\n#define USE_MAG_LIS3MDL\n#define USE_MAG_AK8963\n#define USE_MAG_MPU925X_AK8963\n#define USE_MAG_SPI_AK8963\n#define USE_MAG_AK8975\n")),(0,n.kt)("h3",{id:"425-defines-for-sx1280"},"4.2.5 Defines for SX1280"),(0,n.kt)("p",null,"For SPI based SX1280 target designs add the following defines:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"#define USE_RX_EXPRESSLRS\n#define USE_RX_EXPRESSLRS_TELEMETRY\n#define USE_RX_SX1280\n#define RX_CHANNELS_AETR\n")),(0,n.kt)("h3",{id:"426-defines-for-osd"},"4.2.6 Defines for OSD"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"#define USE_MAX7456\n")),(0,n.kt)("h3",{id:"427-defines-for-sdcard"},"4.2.7 Defines for SDCARD"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"#define USE_SDCARD\n")),(0,n.kt)("h3",{id:"428-defines-for-cc2500"},"4.2.8 Defines for CC2500"),(0,n.kt)("p",null,"For SPI based CC2500 target designs add the following define:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"#define USE_RX_CC2500\n")),(0,n.kt)("h2",{id:"43-usage-of-the-cloud-build-api"},"4.3 Usage of the cloud build API"),(0,n.kt)("p",null,"See reference to ",(0,n.kt)("a",{parentName:"p",href:"/betaflight.com/docs/development/API/Cloud-Build-API"},"cloud build API")),(0,n.kt)("h1",{id:"5-information-for-marketing-purposes"},"5 Information for Marketing Purposes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Betaflight is an open source flight controller software (firmware) used to fly multi-rotor and fixed wing aircraft.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Betaflight is a fork of Baseflight and Cleanflight, with an emphasis focused on flight performance, leading-edge feature additions, and wide target support. Combining cutting edge flight performance with diverse hardware support, Betaflight is the leading solution for high performance small unmanned aircraft.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"This project is operated and maintained by volunteers, with community support from pilots with a diverse range of flight goals.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Pilots flying Betaflight have won every major FAI, MultiGP, and other major FPV multirotor racing event since 2019."))))}c.isMDXComponent=!0},2294:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/bf_logo-919a37545e9c1cb988f9e4f90526294b.png"}}]);