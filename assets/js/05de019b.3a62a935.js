"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3933],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),d=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=d(e.components);return o.createElement(s.Provider,{value:n},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(t),u=r,m=c["".concat(s,".").concat(u)]||c[u]||f[u]||i;return t?o.createElement(m,a(a({ref:n},p),{},{components:t})):o.createElement(m,a({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:r,a[1]=l;for(var d=2;d<i;d++)a[d]=t[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},41141:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var o=t(87462),r=(t(67294),t(3905));const i={},a="Configuration",l={unversionedId:"development/development/Configuration Storage",id:"development/development/Configuration Storage",title:"Configuration",description:"The configuration in cleanflight is stored at the end of the flash ram, currently it uses 2-4KB of flash depending on the target.",source:"@site/docs/development/development/Configuration Storage.md",sourceDirName:"development/development",slug:"/development/development/Configuration Storage",permalink:"/betaflight.com/docs/development/development/Configuration Storage",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"development",previous:{title:"Configuration Format",permalink:"/betaflight.com/docs/development/development/Configuration Format"},next:{title:"What is DSHOT?",permalink:"/betaflight.com/docs/development/development/Dshot"}},s={},d=[{value:"Erasing",id:"erasing",level:2}],p={toc:d};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"The configuration in cleanflight is stored at the end of the flash ram, currently it uses 2-4KB of flash depending on the target."),(0,r.kt)("p",null,"Sometimes it's necessary to erase this during development."),(0,r.kt)("h2",{id:"erasing"},"Erasing"),(0,r.kt)("p",null,"Generate a 2-4kb blank file."),(0,r.kt)("p",null,"2kb:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"dd if=/dev/zero of=obj/blankconfig.bin bs=1024 count=2\n")),(0,r.kt)("p",null,"4kb:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"dd if=/dev/zero of=obj/blankconfig.bin bs=1024 count=4\n")),(0,r.kt)("p",null,"Overwrite configuration using JLink"),(0,r.kt)("p",null,"Run JLink (OSX: ",(0,r.kt)("inlineCode",{parentName:"p"},"/Applications/SEGGER/JLink/JLinkExe"),")"),(0,r.kt)("p",null,"Execute commands\n",(0,r.kt)("inlineCode",{parentName:"p"},"device <your device>"),", e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"STM32F303CB"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"r"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"h"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"loadbin obj/blankconfig.bin, <address>"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"r")," to Reboot FC.\n",(0,r.kt)("inlineCode",{parentName:"p"},"q")," to quit"),(0,r.kt)("p",null,"the address is the address of the end of the flash ram minus the size of the configuration."),(0,r.kt)("p",null,"example addresses:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"64k device/2kb config = 0x800F800\n128k device/2kb config = 0x801F800\n128k device/4kb config = 0x801F000\n256k device/2kb config = 0x803f800\n256k device/4kb config = 0x803f000\n")),(0,r.kt)("p",null,"Example session"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ /Applications/SEGGER/JLink/JLinkExe\nSEGGER J-Link Commander V4.90c ('?' for help)\nCompiled Aug 29 2014 09:52:38\nDLL version V4.90c, compiled Aug 29 2014 09:52:33\nFirmware: J-Link ARM-OB STM32 compiled Aug 22 2012 19:52:04\nHardware: V7.00\nS/N: -1\nFeature(s): RDI,FlashDL,FlashBP,JFlash,GDBFull\nVTarget = 3.300V\nInfo: Could not measure total IR len. TDO is constant high.\nInfo: Could not measure total IR len. TDO is constant high.\nNo devices found on JTAG chain. Trying to find device on SWD.\nInfo: Found SWD-DP with ID 0x2BA01477\nInfo: Found Cortex-M4 r0p1, Little endian.\nInfo: FPUnit: 6 code (BP) slots and 2 literal slots\nInfo: TPIU fitted.\nInfo: ETM fitted.\nCortex-M4 identified.\nTarget interface speed: 100 kHz\nJ-Link>device STM32F303CC\nInfo: Device \"STM32F303CC\" selected (256 KB flash, 32 KB RAM).\nReconnecting to target...\nInfo: Found SWD-DP with ID 0x2BA01477\nInfo: Found SWD-DP with ID 0x2BA01477\nInfo: Found Cortex-M4 r0p1, Little endian.\nInfo: FPUnit: 6 code (BP) slots and 2 literal slots\nInfo: TPIU fitted.\nInfo: ETM fitted.\nJ-Link>r\nReset delay: 0 ms\nReset type NORMAL: Resets core & peripherals via SYSRESETREQ & VECTRESET bit.\nJ-Link>h\nPC = 08001154, CycleCnt = 00000000\nR0 = 00000000, R1 = 00000000, R2 = 00000000, R3 = 00000000\nR4 = 00000000, R5 = 00000000, R6 = 00000000, R7 = 00000000\nR8 = 00000000, R9 = 00000000, R10= 00000000, R11= 00000000\nR12= 00000000\nSP(R13)= 2000A000, MSP= 2000A000, PSP= 00000000, R14(LR) = FFFFFFFF\nXPSR = 01000000: APSR = nzcvq, EPSR = 01000000, IPSR = 000 (NoException)\nCFBP = 00000000, CONTROL = 00, FAULTMASK = 00, BASEPRI = 00, PRIMASK = 00\nFPU regs: FPU not enabled / not implemented on connected CPU.\nJ-Link>loadbin obj/blankconfig.bin, 0x803f800\nDownloading file [obj/blankconfig.bin]...\nWARNING: CPU is running at low speed (7989 kHz).\nInfo: J-Link: Flash download: Flash programming performed for 1 range (2048 bytes)\nInfo: J-Link: Flash download: Total time needed: 1.254s (Prepare: 0.698s, Compare: 0.009s, Erase: 0.075s, Program: 0.405s, Verify: 0.005s, Restore: 0.059s)\nO.K.\nJ-Link>r\nReset delay: 0 ms\nReset type NORMAL: Resets core & peripherals via SYSRESETREQ & VECTRESET bit.\nJ-Link>q\n")))}c.isMDXComponent=!0}}]);