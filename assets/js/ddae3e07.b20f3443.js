"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6246],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>N});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var m=a.createContext({}),p=function(t){var e=a.useContext(m),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=p(t.components);return a.createElement(m.Provider,{value:e},t.children)},d="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},g=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,m=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),d=p(n),g=r,N=d["".concat(m,".").concat(g)]||d[g]||k[g]||l;return n?a.createElement(N,i(i({ref:e},u),{},{components:n})):a.createElement(N,i({ref:e},u))}));function N(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=g;var o={};for(var m in e)hasOwnProperty.call(e,m)&&(o[m]=e[m]);o.originalType=t,o[d]="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},62906:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={},i="Mixer Support",o={unversionedId:"wiki/archive/Mixer-Support",id:"wiki/archive/Mixer-Support",title:"Mixer Support",description:"- Beginning with 3.1.7, some rarely used mixers have being dropped from F1 and F3 firmwares due to flash space limitation.",source:"@site/docs/wiki/archive/Mixer-Support.md",sourceDirName:"wiki/archive",slug:"/wiki/archive/Mixer-Support",permalink:"/betaflight.com/docs/wiki/archive/Mixer-Support",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"wiki",previous:{title:"Mass Storage Device Support",permalink:"/betaflight.com/docs/wiki/archive/Mass-Storage-Device-(MSC)-Support"},next:{title:"Mixer Types",permalink:"/betaflight.com/docs/wiki/archive/Mixer-Types"}},m={},p=[{value:"The future",id:"the-future",level:3},{value:"The support matrix (x = not included, o = included)",id:"the-support-matrix-x--not-included-o--included",level:3},{value:"Octo X8 emulation",id:"octo-x8-emulation",level:4},{value:"PPM to SERVO emulation",id:"ppm-to-servo-emulation",level:4},{value:"Other emulations",id:"other-emulations",level:4}],u={toc:p};function d(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mixer-support"},"Mixer Support"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Beginning with 3.1.7, some rarely used mixers have being dropped from F1 and F3 firmwares due to flash space limitation."),(0,r.kt)("li",{parentName:"ul"},"In addition, some mixers are not supported from the beginning (or at least I couldn't find any remains of the code)."),(0,r.kt)("li",{parentName:"ul"},'On 3.2 and later, unsupported mixer is detected and reset to default (mixers without servos to "Custom" and mixers with servos to "Custom Airplane").')),(0,r.kt)("h3",{id:"the-future"},"The future"),(0,r.kt)("p",null,"Ultimately, motor and servo mixes will be dynamically loaded by configurator, and rarely used mixers are likely to resurrect (if devs find them useful enough)."),(0,r.kt)("h3",{id:"the-support-matrix-x--not-included-o--included"},"The support matrix (x = not included, o = included)"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Mixer"),(0,r.kt)("th",{parentName:"tr",align:null},"F1 (","*","1)"),(0,r.kt)("th",{parentName:"tr",align:null},"F3"),(0,r.kt)("th",{parentName:"tr",align:null},"F4 & F7"),(0,r.kt)("th",{parentName:"tr",align:null},"Note"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"QUADX"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"QUADX 1234"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"QUAD+"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Tricopter"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Gimbal"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Hex +"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Hex X"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Hex H"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Octo Flat +"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Octo Flat X"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Flying Wing"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Airplane"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"Single prop (inconsistent with graphic)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Heli 120"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"No code")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Heli 90"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"No code")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Single Copter"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"Insufficient code (no mmix)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dual Copter"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"Doesn't reset without #3178")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Bicopter"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"Doesn't reset without #3178")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"V-tail Quad"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"A-tail Quad"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Y4"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Y6"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Octo X8"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"Can be emulated by mmix (see below)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PPM to SERVO"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"No code, can be emulated by smix (see below)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Custom"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Custom Airplane"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Custom Tricopter"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null},"o"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"*","1: CJMCU and MICROSCISKY only supports QUAD mixer."),(0,r.kt)("h4",{id:"octo-x8-emulation"},"Octo X8 emulation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mixer custom\nmmix reset\nmmix 0  1.000 -1.000  1.000 -1.000\nmmix 1  1.000 -1.000 -1.000  1.000\nmmix 2  1.000  1.000  1.000  1.000\nmmix 3  1.000  1.000 -1.000 -1.000\nmmix 4  1.000 -1.000  1.000  1.000\nmmix 5  1.000 -1.000 -1.000 -1.000\nmmix 6  1.000  1.000  1.000 -1.000\nmmix 7  1.000  1.000 -1.000  1.000\n")),(0,r.kt)("h4",{id:"ppm-to-servo-emulation"},"PPM to SERVO emulation"),(0,r.kt)("p",null,"An example of direct channel mapping."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mixer customairplane\nsmix reset\nsmix 0 0 4 100 0 0 100 0\nsmix 1 1 5 100 0 0 100 0\nsmix 2 2 6 100 0 0 100 0\nsmix 3 3 7 100 0 0 100 0\nsmix 4 4 8 100 0 0 100 0\nsmix 5 5 9 100 0 0 100 0\nsmix 6 6 10 100 0 0 100 0\nsmix 7 7 11 100 0 0 100 0\n")),(0,r.kt)("h4",{id:"other-emulations"},"Other emulations"),(0,r.kt)("p",null,"It is easy to create a set of mmix/smix for a given mixer configuration; take corresponding lines from the source ",(0,r.kt)("inlineCode",{parentName:"p"},"src/main/flight/{mixer,servos}.c")," and convert them to CLI format."))}d.isMDXComponent=!0}}]);