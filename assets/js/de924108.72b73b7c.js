"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6927],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>g});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),u=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=u(t.components);return n.createElement(p.Provider,{value:e},t.children)},m="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},N=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),m=u(a),N=r,g=m["".concat(p,".").concat(N)]||m[N]||k[N]||l;return a?n.createElement(g,i(i({ref:e},d),{},{components:a})):n.createElement(g,i({ref:e},d))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=N;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[m]="string"==typeof t?t:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}N.displayName="MDXCreateElement"},47567:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(87462),r=(a(67294),a(3905));const l={},i="Board - AbuseMark Naze32",o={unversionedId:"wiki/boards/NAZE32",id:"wiki/boards/NAZE32",title:"Board - AbuseMark Naze32",description:"The Naze32 target supports all Naze hardware revisions. Revision 4 and 5 are used and",source:"@site/docs/wiki/boards/NAZE32.md",sourceDirName:"wiki/boards",slug:"/wiki/boards/NAZE32",permalink:"/betaflight.com/docs/wiki/boards/NAZE32",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"wiki",previous:{title:"MultiFlite PICO-B-FC",permalink:"/betaflight.com/docs/wiki/boards/MULTIFLITEPICO"},next:{title:"NERO",permalink:"/betaflight.com/docs/wiki/boards/NERO"}},p={},u=[{value:"Serial Ports",id:"serial-ports",level:2},{value:"Pinouts",id:"pinouts",level:2},{value:"Recovery",id:"recovery",level:2},{value:"Board",id:"board",level:3},{value:"Cleanflight configurator",id:"cleanflight-configurator",level:3},{value:"GPS",id:"gps",level:3}],d={toc:u};function m(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"board---abusemark-naze32"},"Board - AbuseMark Naze32"),(0,r.kt)("p",null,"The Naze32 target supports all Naze hardware revisions. Revision 4 and 5 are used and\nfrequently flown by the primary maintainer. Previous Naze hardware revisions may have issues,\nif found please report via the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cleanflight/cleanflight/issues"},"github issue tracker"),"."),(0,r.kt)("h2",{id:"serial-ports"},"Serial Ports"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Identifier"),(0,r.kt)("th",{parentName:"tr",align:null},"RX"),(0,r.kt)("th",{parentName:"tr",align:null},"TX"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"USART1"),(0,r.kt)("td",{parentName:"tr",align:null},"RX / PA10"),(0,r.kt)("td",{parentName:"tr",align:null},"TX / PA9 / TELEM"),(0,r.kt)("td",{parentName:"tr",align:null},"TELEM output is always inverted (for FrSky). Internally connected to USB port via CP2102 IC")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"USART2"),(0,r.kt)("td",{parentName:"tr",align:null},"RC4 / PA3"),(0,r.kt)("td",{parentName:"tr",align:null},"RC3 / PA2"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"SOFTSERIAL1"),(0,r.kt)("td",{parentName:"tr",align:null},"RC5 / PA6"),(0,r.kt)("td",{parentName:"tr",align:null},"RC6 / PA7"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"SOFTSERIAL2"),(0,r.kt)("td",{parentName:"tr",align:null},"RC7 / PB0"),(0,r.kt)("td",{parentName:"tr",align:null},"RC8 / PB1"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You cannot use USART1/TX/TELEM pins at the same time."),(0,r.kt)("li",{parentName:"ul"},"You may encounter flashing problems if you have something connected to the RX/TX pins. Try disconnecting RX/TX.")),(0,r.kt)("h2",{id:"pinouts"},"Pinouts"),(0,r.kt)("p",null,"The 10 pin RC I/O connector has the following pinouts when used in RX_PPM/RX_SERIAL mode."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Pin"),(0,r.kt)("th",{parentName:"tr",align:null},"Identifier"),(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Ground"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"Circle"),(0,r.kt)("td",{parentName:"tr",align:null},"+5V"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"RX_PPM"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable ",(0,r.kt)("inlineCode",{parentName:"td"},"feature RX_PPM"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"RSSI_ADC"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable ",(0,r.kt)("inlineCode",{parentName:"td"},"feature RSSI_ADC"),". Connect to the output of a PWM-RSSI conditioner, 0v-3.3v input")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"USART2 TX"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"USART2 RX"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7"),(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"LED_STRIP"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable ",(0,r.kt)("inlineCode",{parentName:"td"},"feature LED_STRIP"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"unused"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9"),(0,r.kt)("td",{parentName:"tr",align:null},"7"),(0,r.kt)("td",{parentName:"tr",align:null},"Sonar Trigger"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"Sonar Echo / CURRENT"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable ",(0,r.kt)("inlineCode",{parentName:"td"},"feature CURRENT_METER")," Connect to the output of a current sensor, 0v-3.3v input")))),(0,r.kt)("p",null,"When SOFTSERIAL is enabled, LED_STRIP and CURRENT_METER are unavailable, but two SoftSerial ports are made available to use instead."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Pin"),(0,r.kt)("th",{parentName:"tr",align:null},"Identifier"),(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7"),(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"SOFTSERIAL1 RX"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable ",(0,r.kt)("inlineCode",{parentName:"td"},"feature SOFTSERIAL"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"SOFTSERIAL1 TX"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9"),(0,r.kt)("td",{parentName:"tr",align:null},"7"),(0,r.kt)("td",{parentName:"tr",align:null},"SOFTSERIAL2 RX"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"SOFTSERIAL2 TX"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"recovery"},"Recovery"),(0,r.kt)("h3",{id:"board"},"Board"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Short the two pads labelled 'Boot' ",(0,r.kt)("strong",{parentName:"li"},"taking extra care not to touch the 5V pad")),(0,r.kt)("li",{parentName:"ul"},"Apply power to the board"),(0,r.kt)("li",{parentName:"ul"},"Remove the short on the board")),(0,r.kt)("h3",{id:"cleanflight-configurator"},"Cleanflight configurator"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Select the correct hardware and the desired release of the Cleanflight firmware"),(0,r.kt)("li",{parentName:"ul"},'Put a check in the "No reboot sequence"'),(0,r.kt)("li",{parentName:"ul"},"Flash firmware")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/-------------------\\\n|O                 O|\n| []5V              |\n| [][]Boot          |\n|                   |\n|                   |\n|                   |\n|                   |\n|O                 O|\n\\-------[USB]-------/\n")),(0,r.kt)("h3",{id:"gps"},"GPS"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Due to limited flash space GPS is ",(0,r.kt)("em",{parentName:"li"},"NOT")," availible. ",(0,r.kt)("em",{parentName:"li"},"potentially enabled with a custom flash"))))}m.isMDXComponent=!0}}]);