"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7901],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),u=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(r),m=n,k=d["".concat(o,".").concat(m)]||d[m]||c[m]||i;return r?a.createElement(k,l(l({ref:t},p),{},{components:r})):a.createElement(k,l({ref:t},p))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:n,l[1]=s;for(var u=2;u<i;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},78600:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var a=r(87462),n=(r(67294),r(3905));const i={},l="SIRINFPV",s={unversionedId:"wiki/boards/SIRINFPV",id:"wiki/boards/SIRINFPV",title:"SIRINFPV",description:"OSD and VTX",source:"@site/docs/wiki/boards/SIRINFPV.md",sourceDirName:"wiki/boards",slug:"/wiki/boards/SIRINFPV",permalink:"/betaflight.com/docs/wiki/boards/SIRINFPV",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"wiki",previous:{title:"SINGULARITY",permalink:"/betaflight.com/docs/wiki/boards/SINGULARITY"},next:{title:"SKYZONEF405",permalink:"/betaflight.com/docs/wiki/boards/SKYZONEF405"}},o={},u=[{value:"Description",id:"description",level:2},{value:"MCU, Sensors and Features",id:"mcu-sensors-and-features",level:2},{value:"Hardware",id:"hardware",level:3},{value:"Features",id:"features",level:3},{value:"Hardware Designs (if available)",id:"hardware-designs-if-available",level:2},{value:"Manufacturers and Distributors",id:"manufacturers-and-distributors",level:2},{value:"Designers",id:"designers",level:2},{value:"Maintainers",id:"maintainers",level:2},{value:"Similar Targets",id:"similar-targets",level:2},{value:"Variants",id:"variants",level:2},{value:"FAQ &amp; Known Issues",id:"faq--known-issues",level:2},{value:"Other Resources",id:"other-resources",level:2}],p={toc:u};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"sirinfpv"},"SIRINFPV"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"OSD and VTX")),(0,n.kt)("h2",{id:"description"},"Description"),(0,n.kt)("p",null,"The SirinFPV board integrates a Betaflight OSD and VTX."),(0,n.kt)("h2",{id:"mcu-sensors-and-features"},"MCU, Sensors and Features"),(0,n.kt)("h3",{id:"hardware"},"Hardware"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"TODO: (update to match the target)")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"MCU: STM32F3"),(0,n.kt)("li",{parentName:"ul"},"IMU: MPU6050 (SPI)"),(0,n.kt)("li",{parentName:"ul"},"IMU Interrupt: Yes"),(0,n.kt)("li",{parentName:"ul"},"BARO: No"),(0,n.kt)("li",{parentName:"ul"},"VCP: Yes"),(0,n.kt)("li",{parentName:"ul"},"Hardware UARTS: 3"),(0,n.kt)("li",{parentName:"ul"},"OSD: No"),(0,n.kt)("li",{parentName:"ul"},"Blackbox: No"),(0,n.kt)("li",{parentName:"ul"},"PPM/UART Shared: UART2"),(0,n.kt)("li",{parentName:"ul"},"Battery Voltage Sensor: Yes, directly connected, no wiring necessary"),(0,n.kt)("li",{parentName:"ul"},"Integrated Voltage Regulator: Yes, unknown voltage limit"),(0,n.kt)("li",{parentName:"ul"},"Brushed Motor Mosfets: Yes"),(0,n.kt)("li",{parentName:"ul"},"Buttons: 1 - DFU")),(0,n.kt)("h3",{id:"features"},"Features"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"TODO: (update to match the target)")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Current Sensor: Not implemented"),(0,n.kt)("li",{parentName:"ul"},"BlHeli passthrough: No (due to buffered outputs)"),(0,n.kt)("li",{parentName:"ul"},"WS2811 Led Strip: Not implemented"),(0,n.kt)("li",{parentName:"ul"},"Transponder: No")),(0,n.kt)("h2",{id:"hardware-designs-if-available"},"Hardware Designs (if available)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"schematics, etc.")),(0,n.kt)("h2",{id:"manufacturers-and-distributors"},"Manufacturers and Distributors"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"name of manufacturers and distributors for this specific board, variants go below")),(0,n.kt)("p",null,"Available here: ",(0,n.kt)("inlineCode",{parentName:"p"},"link to purchase")),(0,n.kt)("h2",{id:"designers"},"Designers"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/savaga"},"Savaga")),(0,n.kt)("h2",{id:"maintainers"},"Maintainers"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"(add your name here if you help test or contribute code for this board)")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/savaga"},"Savaga")),(0,n.kt)("h2",{id:"similar-targets"},"Similar Targets"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"(add links board descriptions here that are similar in features or function, but have a separate target)")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Board---OMNIBUS"},"OMNIBUS"))),(0,n.kt)("h2",{id:"variants"},"Variants"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"(add links to boards here that are similar in features or function, but use this target when flashing)")),(0,n.kt)("h2",{id:"faq--known-issues"},"FAQ & Known Issues"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"(add FAQs, known issues and workarounds specifically related to this board. please link work in progress issues to the related github issue or pull request)")),(0,n.kt)("h2",{id:"other-resources"},"Other Resources"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"(add setup guides and instructional material here)")),(0,n.kt)("p",null,"Rcgroups Thread: ",(0,n.kt)("inlineCode",{parentName:"p"},"link goes here")))}d.isMDXComponent=!0}}]);